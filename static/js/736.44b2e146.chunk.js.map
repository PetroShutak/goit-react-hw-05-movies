{"version":3,"file":"static/js/736.44b2e146.chunk.js","mappings":"wQAEaA,EAAgBC,EAAAA,GAAAA,IAAH,6CAIbC,EAAWD,EAAAA,GAAAA,GAAH,iGAORE,EAAWF,EAAAA,GAAAA,GAAH,2NAYRG,EAAYH,EAAAA,GAAAA,IAAH,yDAKTI,EAAWJ,EAAAA,GAAAA,GAAH,qFAMRK,EAAgBL,EAAAA,GAAAA,EAAH,oF,6BCqB1B,EAjDa,WACX,MAAwBM,EAAAA,SAAe,IAAvC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,OARAH,EAAAA,WAAgB,WACd,IAAMK,EAAS,mCAAG,qGACGC,EAAAA,EAAAA,IAAkBH,GADrB,OACVF,EADU,OAEhBC,EAAQD,GAFQ,2CAAH,qDAIfI,GACD,GAAE,CAACF,KAGF,SAACV,EAAD,UAEGQ,EAAKM,OAAS,GACb,SAACZ,EAAD,UACGM,EAAKO,KAAI,SAAAC,GAAK,OACb,UAACb,EAAD,YACE,SAACC,EAAD,CACEa,IAAK,yCAAkCD,EAAME,eAAkBC,EAC/DC,IAAKJ,EAAMK,KACXC,QAAS,SAAAC,GACPA,EAAEC,OAAOP,IAzBN,6EA0BJ,KAEH,SAACZ,EAAD,UAAWW,EAAMK,QACjB,UAACf,EAAD,WAAe,cAAYU,EAAMS,eATpBT,EAAMU,GADR,OAejB,uBAAG,2CAIV,C,2NC7BDC,EAAAA,EAAAA,SAAAA,QAFiB,+BAGjBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QALc,mCAMdC,SAAU,SAGL,IAAMC,EAAmB,mCAAG,+GAERH,EAAAA,EAAAA,IAAU,uBAFF,uBAEvBI,EAFuB,EAEvBA,KAFuB,kBAGxBA,EAAKC,SAHmB,uCAK/BC,QAAQC,IAAI,QAAS,CAAEC,MAAK,OALG,kBAMxB,IANwB,yDAAH,qDAUnBC,EAAiB,mCAAG,WAAM1B,GAAN,kGAENiB,EAAAA,EAAAA,IAAA,iBAAoBjB,IAFd,uBAErBqB,EAFqB,EAErBA,KAFqB,kBAGtBA,GAHsB,uCAK7BE,QAAQC,IAAI,QAAS,CAAEC,MAAK,OALC,kBAMtB,IANsB,yDAAH,sDAUjBtB,EAAiB,mCAAG,WAAMH,GAAN,kGAENiB,EAAAA,EAAAA,IAAA,iBAAoBjB,EAApB,aAFM,uBAErBqB,EAFqB,EAErBA,KAFqB,kBAGtBA,EAAKvB,MAHiB,uCAK7ByB,QAAQC,IAAI,QAAS,CAAEC,MAAK,OALC,kBAMtB,IANsB,yDAAH,sDAUjBE,EAAiB,mCAAG,WAAM3B,GAAN,kGAENiB,EAAAA,EAAAA,IAAA,iBAAoBjB,EAApB,aAFM,uBAErBqB,EAFqB,EAErBA,KAFqB,kBAGtBA,EAAKC,SAHiB,uCAK7BC,QAAQC,IAAI,QAAS,CAAEC,MAAK,OALC,kBAMtB,IANsB,yDAAH,sDAUjBG,EAAgB,mCAAG,WAAMC,GAAN,kGAELZ,EAAAA,EAAAA,IAAA,8BAAiCY,IAF5B,uBAEpBR,EAFoB,EAEpBA,KAFoB,kBAIrBA,EAAKC,SAJgB,uCAM5BC,QAAQC,IAAI,QAAS,CAAEC,MAAK,OANA,kBAOrB,IAPqB,yDAAH,sDAehBK,EAAe,mCAAG,WAAM9B,GAAN,kGAEJiB,EAAAA,EAAAA,IAAA,iBAAoBjB,EAApB,YAFI,uBAEnBqB,EAFmB,EAEnBA,KAFmB,kBAGpBA,EAAKC,SAHe,uCAK3BC,QAAQC,IAAI,QAAS,CAAEC,MAAK,OALD,kBAMpB,IANoB,yDAAH,qD","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","utils/api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastContainer = styled.div`\n  margin-top: 20px;\n`;\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  list-style: none;\n`;\n\nexport const CastItem = styled.li`\n  width: 200px;\n  border-radius: 10px;\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.2);\n  overflow: hidden;\n  transition: transform 0.3s ease;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport const CastImage = styled.img`\n  width: 100%;\n  height: auto;\n`;\n\nexport const CastName = styled.h2`\n  margin: 10px 0;\n  font-size: 16px;\n  font-weight: bold;\n`;\n\nexport const CastCharacter = styled.p`\n  font-size: 14px;\n  color: #666;\n  margin-bottom: 10px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CastContainer, CastList, CastItem, CastImage, CastName, CastCharacter } from './Cast.styled';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCredits } from 'utils/api';\n\nconst defaultImage = 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700'; \n\nconst Cast = () => {\n  const [cast, setCast] = React.useState([]);\n  const { movieId } = useParams();\n\n  React.useEffect(() => {\n    const fetchCast = async () => {\n      const cast = await fetchMovieCredits(movieId);\n      setCast(cast);\n    };\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <CastContainer>\n      \n      {cast.length > 0 ? (\n        <CastList>\n          {cast.map(actor => (\n            <CastItem key={actor.id}>\n              <CastImage\n                src={`https://image.tmdb.org/t/p/w500${actor.profile_path}` || defaultImage}\n                alt={actor.name}\n                onError={e => {\n                  e.target.src = defaultImage;\n                }}\n              />\n              <CastName>{actor.name}</CastName>\n              <CastCharacter>Character: {actor.character}</CastCharacter>\n            </CastItem>\n          ))}\n        </CastList>\n      ) : (\n        <p>We don't have any cast for this movie</p>\n      )}\n    </CastContainer>\n  );\n};\n\nCast.propTypes = {\n  cast: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      character: PropTypes.string.isRequired,\n      profile_path: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default Cast;\n","// API Key: 8b801a00c53265c17aedd2cbc707fdf5\n\n// https://api.themoviedb.org/3/movie/550?api_key=8b801a00c53265c17aedd2cbc707fdf5\n\n//     /trending/get-trending список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n//     /search/search-movies пошук фільму за ключовим словом на сторінці фільмів.\n//     /movies/get-movie-details запит повної інформації про фільм для сторінки кінофільму.\n//     /movies/get-movie-credits запит інформації про акторський склад для сторінки кінофільму.\n//     /movies/get-movie-reviews запит оглядів для сторінки кінофільму.\n\nimport axios from 'axios';\n\nconst API_KEY = '8b801a00c53265c17aedd2cbc707fdf5';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const { data } = await axios.get('/trending/movie/day');\n    return data.results;\n  } catch (error) {\n    console.log('error', { error });\n    return [];\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}`);\n    return data;\n  } catch (error) {\n    console.log('error', { error });\n    return [];\n  }\n};\n\nexport const fetchMovieCredits = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}/credits`);\n    return data.cast;\n  } catch (error) {\n    console.log('error', { error });\n    return [];\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}/reviews`);\n    return data.results;\n  } catch (error) {\n    console.log('error', { error });\n    return [];\n  }\n};\n\nexport const fetchMovieSearch = async query => {\n  try {\n    const { data } = await axios.get(`/search/movie?query=${query}`);\n\n    return data.results;\n  } catch (error) {\n    console.log('error', { error });\n    return [];\n  }\n};\n\n\n\n// https://api.themoviedb.org/3/movie/{movie_id}/videos\n\nexport const fetchMovieVideo = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}/videos`);\n    return data.results;\n  } catch (error) {\n    console.log('error', { error });\n    return [];\n  }\n};\n"],"names":["CastContainer","styled","CastList","CastItem","CastImage","CastName","CastCharacter","React","cast","setCast","movieId","useParams","fetchCast","fetchMovieCredits","length","map","actor","src","profile_path","defaultImage","alt","name","onError","e","target","character","id","axios","api_key","language","fetchTrendingMovies","data","results","console","log","error","fetchMovieDetails","fetchMovieReviews","fetchMovieSearch","query","fetchMovieVideo"],"sourceRoot":""}