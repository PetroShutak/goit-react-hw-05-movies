{"version":3,"file":"static/js/387.2bd7a164.chunk.js","mappings":"0RAEaA,EAAmBC,EAAAA,GAAAA,IAAH,+QAiBhBC,EAAaD,EAAAA,GAAAA,GAAH,kDAIVE,EAAaF,EAAAA,GAAAA,GAAH,gDAIVG,EAAeH,EAAAA,GAAAA,GAAH,sEAKZI,EAAgBJ,EAAAA,GAAAA,EAAH,4D,SCe1B,EApCgB,WACd,OAA8BK,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,OAZAE,EAAAA,EAAAA,YAAU,WAET,GAAE,CAACF,KAEJE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,qGACGC,EAAAA,EAAAA,IAAkBJ,GADrB,OACbF,EADa,OAEnBC,EAAWD,GAFQ,2CAAH,qDAIlBK,GACD,GAAE,CAACH,KAGF,SAACT,EAAD,UACGO,EAAQO,OAAS,GAChB,SAACZ,EAAD,UACGK,EAAQQ,KAAI,SAAAC,GAAM,OACjB,UAACb,EAAD,YACE,UAACC,EAAD,WAAc,WAASY,EAAOC,WAC9B,SAACZ,EAAD,UAAgBW,EAAOE,YAFRF,EAAOG,GADP,OAQrB,uBAAG,8CAIV,C,2NC5BDC,EAAAA,EAAAA,SAAAA,QAFiB,+BAGjBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QALc,mCAMdC,SAAU,SAGL,IAAMC,EAAmB,mCAAG,+GAERH,EAAAA,EAAAA,IAAU,uBAFF,uBAEvBI,EAFuB,EAEvBA,KAFuB,kBAGxBA,EAAKC,SAHmB,uCAK/BC,QAAQC,IAAI,QAAS,CAAEC,MAAK,OALG,kBAMxB,IANwB,yDAAH,qDAUnBC,EAAiB,mCAAG,WAAMpB,GAAN,kGAENW,EAAAA,EAAAA,IAAA,iBAAoBX,IAFd,uBAErBe,EAFqB,EAErBA,KAFqB,kBAGtBA,GAHsB,uCAK7BE,QAAQC,IAAI,QAAS,CAAEC,MAAK,OALC,kBAMtB,IANsB,yDAAH,sDAUjBE,EAAiB,mCAAG,WAAMrB,GAAN,kGAENW,EAAAA,EAAAA,IAAA,iBAAoBX,EAApB,aAFM,uBAErBe,EAFqB,EAErBA,KAFqB,kBAGtBA,EAAKO,MAHiB,uCAK7BL,QAAQC,IAAI,QAAS,CAAEC,MAAK,OALC,kBAMtB,IANsB,yDAAH,sDAUjBf,EAAiB,mCAAG,WAAMJ,GAAN,kGAENW,EAAAA,EAAAA,IAAA,iBAAoBX,EAApB,aAFM,uBAErBe,EAFqB,EAErBA,KAFqB,kBAGtBA,EAAKC,SAHiB,uCAK7BC,QAAQC,IAAI,QAAS,CAAEC,MAAK,OALC,kBAMtB,IANsB,yDAAH,sDAUjBI,EAAgB,mCAAG,WAAMC,GAAN,kGAELb,EAAAA,EAAAA,IAAA,8BAAiCa,IAF5B,uBAEpBT,EAFoB,EAEpBA,KAFoB,kBAIrBA,EAAKC,SAJgB,uCAM5BC,QAAQC,IAAI,QAAS,CAAEC,MAAK,OANA,kBAOrB,IAPqB,yDAAH,sDAehBM,EAAe,mCAAG,WAAMzB,GAAN,kGAEJW,EAAAA,EAAAA,IAAA,iBAAoBX,EAApB,YAFI,uBAEnBe,EAFmB,EAEnBA,KAFmB,kBAGpBA,EAAKC,SAHe,uCAK3BC,QAAQC,IAAI,QAAS,CAAEC,MAAK,OALD,kBAMpB,IANoB,yDAAH,qD","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","utils/api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsContainer = styled.div`\n  padding: 20px;\n  margin-bottom: 20px;\n  border-radius: 4px;\n  background-color: #fff;\n  box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.5);\n\n  h1 {\n    margin-bottom: 20px;\n    font-size: 1.5rem;\n  }\n\n  p {\n    font-size: 1.2rem;\n  }\n`;\n\nexport const ReviewList = styled.ul`\n  list-style-type: none;\n`;\n\nexport const ReviewItem = styled.li`\n  margin-bottom: 20px;\n`;\n\nexport const ReviewAuthor = styled.h2`\n  font-size: 1.2rem;\n  margin-bottom: 10px;\n`;\n\nexport const ReviewContent = styled.p`\n  font-size: 1rem;\n  color: #555;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'utils/api';\nimport {\n  ReviewsContainer,\n  ReviewList,\n  ReviewItem,\n  ReviewAuthor,\n  ReviewContent\n} from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n  }, [movieId]);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      const reviews = await fetchMovieReviews(movieId);\n      setReviews(reviews);\n    };\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <ReviewsContainer>\n      {reviews.length > 0 ? (\n        <ReviewList>\n          {reviews.map(review => (\n            <ReviewItem key={review.id}>\n              <ReviewAuthor>Author: {review.author}</ReviewAuthor>\n              <ReviewContent>{review.content}</ReviewContent>\n            </ReviewItem>\n          ))}\n        </ReviewList>\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n    </ReviewsContainer>\n  );\n};\n\n\n\nexport default Reviews;\n","// API Key: 8b801a00c53265c17aedd2cbc707fdf5\n\n// https://api.themoviedb.org/3/movie/550?api_key=8b801a00c53265c17aedd2cbc707fdf5\n\n//     /trending/get-trending список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n//     /search/search-movies пошук фільму за ключовим словом на сторінці фільмів.\n//     /movies/get-movie-details запит повної інформації про фільм для сторінки кінофільму.\n//     /movies/get-movie-credits запит інформації про акторський склад для сторінки кінофільму.\n//     /movies/get-movie-reviews запит оглядів для сторінки кінофільму.\n\nimport axios from 'axios';\n\nconst API_KEY = '8b801a00c53265c17aedd2cbc707fdf5';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const { data } = await axios.get('/trending/movie/day');\n    return data.results;\n  } catch (error) {\n    console.log('error', { error });\n    return [];\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}`);\n    return data;\n  } catch (error) {\n    console.log('error', { error });\n    return [];\n  }\n};\n\nexport const fetchMovieCredits = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}/credits`);\n    return data.cast;\n  } catch (error) {\n    console.log('error', { error });\n    return [];\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}/reviews`);\n    return data.results;\n  } catch (error) {\n    console.log('error', { error });\n    return [];\n  }\n};\n\nexport const fetchMovieSearch = async query => {\n  try {\n    const { data } = await axios.get(`/search/movie?query=${query}`);\n\n    return data.results;\n  } catch (error) {\n    console.log('error', { error });\n    return [];\n  }\n};\n\n\n\n// https://api.themoviedb.org/3/movie/{movie_id}/videos\n\nexport const fetchMovieVideo = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}/videos`);\n    return data.results;\n  } catch (error) {\n    console.log('error', { error });\n    return [];\n  }\n};\n"],"names":["ReviewsContainer","styled","ReviewList","ReviewItem","ReviewAuthor","ReviewContent","useState","reviews","setReviews","movieId","useParams","useEffect","fetchReviews","fetchMovieReviews","length","map","review","author","content","id","axios","api_key","language","fetchTrendingMovies","data","results","console","log","error","fetchMovieDetails","fetchMovieCredits","cast","fetchMovieSearch","query","fetchMovieVideo"],"sourceRoot":""}